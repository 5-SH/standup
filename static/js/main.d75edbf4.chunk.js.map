{"version":3,"sources":["reducers/Article.js","constants.js","store/global.js","FirebaseDao.js","config.js","actions/Button.js","actions/Group.js","actions/Article.js","PopCard.js","Login.js","Profile.js","Card.js","Editor.js","Embedly.js","GroupAdd.js","FileUtil.js","GroupCard.js","GroupList.js","Buttons.js","CardList.js","Home.js","NotFound.js","App.js","index.js","img/stand_up_logo.png"],"names":["getArticles","state","action","type","articles_of_mine","cUser","firebase","auth","currentUser","articles","forEach","article","user","uid","push","Object","assign","reducer","combineReducers","articleReducers","routing","routerReducer","store","createStore","applyMiddleware","thunk","firebaseui","require","_getUserKeyFromEmail","email","Promise","resolve","reject","database","ref","on","snapshot","users","val","hasUser","key","FirebaseDao","config","apps","length","this","firebaseApp","initializeApp","postData","child","groupName","groups","isReal","console","log","name","checkGroupExists","then","group","groupKey","undefined","updates","updateRes","update","catch","err","remove","off","pagesize","callback","orderByKey","limitToLast","AuthUI","getInstance","signOut","addUser","owner","e","entry","once","isValid","getGroup","sn","Error","firebase_config","apiKey","process","authDomain","databaseURL","storageBucket","messagingSenderId","selectButton","button","selectedButton","defaultStyle","_selectStyle","style_d","groupStyle","style_g","editStyle","style_e","color","dao","FirebaseDAO","logoUrl","dispatch","listGroupArticle","items","keys","map","reverse","getArticle","groupSelect","loadArticles","list","item","PopCard","props","isPop","className","href","onClick","logout","Component","connect","Login","ui","getUI","uiConfig","callbacks","addUserTx","displayName","photoURL","GoogleAuthProvider","PROVIDER_ID","start","reset","id","Profile","onAuthStateChanged","setState","popProfile","src","alt","Card","cardInfo","url","target","links","thumbnail","meta","title","description","site","Editor","handleSubmit","bind","onPaste","editorChange","getCard","hasValue","detectURL","getForcedState","embedlyUrl","content","request","get","params","api_key","response","data","event","preventDefault","newKey","forceUpdate","currentTarget","textContent","clipboardData","getAsString","text","checkText","obj","keyCode","urls","match","value","trim","contentEditable","placeholder","onKeyUp","dangerouslySetInnerHTML","__html","disabled","ownProps","default","GroupAdd","groupImage","isSpin","groupNameUnique","submit","addGroup","alert","popGroupAdd","isValidGroup","exists","acceptedFiles","rejectedFiles","files","size","storageRef","storage","file","ext","split","pop","metadata","contentType","uploadTask","put","TaskEvent","STATE_CHANGED","progress","bytesTransferred","totalBytes","TaskState","PAUSED","RUNNING","code","getDownloadURL","downloadURL","imageUpload","downloadUrl","groupNameChanged","checkGroups","onDrop","accept","getRootProps","getInputProps","isDragActive","isDragReject","GroupCard","imageUrl","changeGroup","RenderGroupCardList","settings","dots","infinite","speed","slidesToShow","slidesToScroll","groupDOMs","newDOMs","hasOwnProperty","createNewDOMs","prevProps","prevState","GroupList","isLoaded","groupList","renderGroupAdd","Buttons","args","selected","style","renderActionBar","width","height","position","CardList","index","createCard","Home","backgroundImage","logo","NotFound","App","exact","path","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.d75edbf4.chunk.js","sourcesContent":["import firebase from 'firebase';\r\nimport {USER, GROUP} from '../constants'\r\n\r\nexport default function getArticles(state, action) {\r\n  // console.log('dispatch getArticles', state, action.type);\r\n\r\n  if (action.type === USER) {\r\n    let articles_of_mine = [];\r\n    let cUser = firebase.auth().currentUser;\r\n    state.articles.forEach((article) => {\r\n      if( article.user.uid && cUser && (article.user.uid ===  cUser.uid)){\r\n        articles_of_mine.push(article);\r\n      }\r\n    });\r\n\r\n    return Object.assign({}, state, { articles: articles_of_mine });\r\n  } else if (action.type === GROUP) {\r\n    return Object.assign({}, state,action);\r\n  }\r\n\r\n  return Object.assign({}, state,action);\r\n}","export const USER = 'USER';\r\nexport const GROUP = 'GROUP';\r\nexport const ALL = 'ALL';\r\nexport const LOGIN ='LOGIN';\r\nexport const BUTTON = 'BUTTON';","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport { syncHistoryWithStore, routerReducer } from 'react-router-redux'\r\n// 비동기 콜백을 redux에서 처리하는 middleware\r\nimport thunk from 'redux-thunk';\r\nimport * as articleReducers from '../reducers/Article'\r\n\r\n// reducer들을 조합해 줍니다. \r\n// 기본적으로 routerReducer는 router 에서 사용되는 상태들을 가지고 옵니다.\r\n// 우리가 관리할 reducer는 아래에 추가 됩니다\r\nconst reducer = combineReducers({\r\n  ...articleReducers,\r\n  routing: routerReducer\r\n})\r\n//DevTools의 Jsx\r\n//스토어를 만드는데,reducer 와 middleware를 변수로 받아서 처리합니다.\r\nexport const store = createStore(\r\n  reducer,\r\n  applyMiddleware(thunk)\r\n)\r\n//결국 store 객체를 browserHistory와 엮어서 만들어 줍니다.\r\n// export const history = syncHistoryWithStore(browserHistory, store)","import firebase from 'firebase';\r\nvar firebaseui = require('firebaseui');\r\n\r\nfunction _getUserKeyFromEmail(email) {\r\n  return new Promise((resolve,reject) => {\r\n    firebase.database().ref('/users').on('value', snapshot => {\r\n      let users = snapshot.val();\r\n      let hasUser = false;\r\n      for (const key in users) {\r\n\r\n\r\n        if(users[key].email === email) {\r\n          hasUser = true;\r\n          resolve({ key:key,...users[key] });\r\n          break;\r\n        }\r\n      }\r\n      \r\n      if(!hasUser) reject();\r\n    });\r\n  });\r\n}\r\nfunction _validEntry(entry) {\r\n  return new Promise((resolve, reject) => {\r\n    firebase.database().ref(entry).once('value', snapshot => {\r\n      if (!snapshot.val()) resolve(false);\r\n      else resolve(true);\r\n    }, err => {\r\n      reject(err);\r\n    })\r\n  });\r\n}\r\n\r\nexport default class FirebaseDao {\r\n  constructor(config) {\r\n    if (firebase.apps && firebase.apps.length > 0){\r\n      this.firebaseApp = firebase.apps[0];\r\n    } else {\r\n      this.firebaseApp = firebase.initializeApp(config);\r\n    }\r\n  }\r\n  \r\n  getFirebaseApp() {\r\n    return this.firebaseApp;\r\n  }\r\n\r\n  insert(postData){\r\n    return firebase.database().ref().child('posts').push(postData);\r\n  }\r\n  \r\n  checkGroupExists(groupName) {\r\n    return new Promise((resolve, reject) => {\r\n      firebase.database().ref('/groups').on('value', snapshot => {\r\n        const groups = snapshot.val();\r\n        let isReal = false;\r\n        \r\n        \r\n        for (const key in groups){\r\n          console.log('checkGroupExists 1', groups, groupName);\r\n          if (groups[key].name === groupName) {\r\n            isReal = true;\r\n            \r\n            console.log('checkGroupExists', key, groups[key]);\r\n            \r\n            resolve(groups[key]);\r\n          }\r\n        }\r\n        if (!isReal) reject();\r\n      });\r\n    });\r\n  }\r\n  \r\n  update(key, postData){\r\n    return new Promise((resolve, reject) => {\r\n      this.checkGroupExists(postData.groupName).then(group => {\r\n        const groupKey = group ? group.key : undefined;\r\n        const uid = this.currentUser.uid;\r\n        const updates = {};\r\n        postData.key = key;\r\n\r\n        console.log('update', key);\r\n\r\n        updates['/group-posts/' + groupKey + \"/\"+ key] = postData;\r\n        updates['/user-posts/' + uid + \"/\" + key] = postData;\r\n        const updateRes =  firebase.database().ref().update(updates);\r\n\r\n        resolve(updateRes);\r\n      }).catch(err => {\r\n        console.log(err);\r\n        reject(err);\r\n      })\r\n    });\r\n  }\r\n  \r\n  remove(key) {\r\n    return new Promise(resolve => {\r\n      firebase.database().ref('/group-posts/').child(key).remove();\r\n      firebase.database().ref('/user-posts/' + this.currentUser().email).child(key).remove();\r\n      resolve(key);\r\n    });\r\n  }\r\n  \r\n  off() {\r\n    return firebase.database().ref().off();\r\n  }\r\n  \r\n  newKey() {\r\n    return firebase.database().ref().child('posts').push().key;\r\n  }\r\n  /**\r\n  * Promise를 호출하게 되면 이벤트가 등록된 부분이 사라지게 된다.\r\n  */\r\n  list(pagesize, callback) {\r\n    // return new Promise(resolve=>{\r\n      firebase.database().ref('posts')\r\n              .orderByKey().limitToLast(pagesize)\r\n              .on('value', articles => {\r\n                console.log('articles', articles);\r\n                callback(articles);\r\n              })\r\n    // });\r\n  }\r\n  \r\n  getArticle(key) {\r\n    return new Promise(resolve => {\r\n      firebase.database().ref('/posts/'+key)\r\n              .on('value', articles => {\r\n                resolve(articles);\r\n              })\r\n    });\r\n  }\r\n  \r\n  getUI() {\r\n      return firebaseui.auth.AuthUI.getInstance() || new firebaseui.auth.AuthUI(firebase.auth());\r\n  }\r\n  \r\n  logout(){\r\n    return firebase.auth().signOut();\r\n  }\r\n  \r\n  get currentUser(){\r\n    return firebase.auth().currentUser;\r\n  }\r\n\r\n  addUserTx(user) {\r\n    _getUserKeyFromEmail(user.email).then(() => {\r\n      //do nothing\r\n    }).catch(()=> {\r\n      return this.addUser(user);\r\n    });\r\n  }\r\n\r\n  addUser(user){\r\n    const update ={};\r\n    update['/users/' + user.uid] = user;\r\n\r\n    return firebase.database().ref().update(update);\r\n  }\r\n\r\n  addGroup(postData) {\r\n    const owner = postData.owner;\r\n    \r\n    return new Promise((resolve, reject) => {\r\n      _getUserKeyFromEmail(owner.email).then(user => {\r\n        try {\r\n          const key = firebase.database().ref().child('groups').push().key;\r\n          postData.key=key;\r\n          \r\n          \r\n          const update = {};\r\n          update['/groups/' + postData.name] = postData;\r\n          update['/users/' + user.key + \"/groups/\" + postData.name] = postData;\r\n          \r\n          firebase.database().ref().update(update);\r\n          \r\n          resolve(postData.name);\r\n        } catch(e) {\r\n          reject(e);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  isValidGroup(groupName){\r\n    return new Promise((resolve, reject) => {\r\n      _validEntry('/groups/'+ groupName).then(isValid => {\r\n        resolve( isValid );\r\n      }).catch(err => {\r\n        reject(err) ;\r\n      });\r\n    });\r\n  }\r\n\r\n  listGroupArticle(group){\r\n    return new Promise((resolve,reject) => {\r\n      this.getGroup(group).once('value', snapshot => {\r\n        const sn = snapshot.val();\r\n        if (sn && sn.key) {\r\n          firebase.database().ref('/group-posts/' + sn.key).on('value', snapshot => {\r\n            resolve(snapshot.val());\r\n          });\r\n        } else {\r\n          reject(new Error('no group'));\r\n        }\r\n      })\r\n    });\r\n  }\r\n\r\n  get groupList(){\r\n    return firebase.database().ref('/groups');\r\n  }\r\n\r\n  getGroup(name){\r\n    return firebase.database().ref('/groups/'+name);\r\n  }\r\n\r\n}","const firebase_config = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DB_URL,\r\n  storageBucket: process.env.REACT_APP_STRG_BKT,\r\n  messagingSenderId: process.env.REACT_APP_MSG_SENDER_ID\r\n }\r\n export const embedlyKey = process.env.REACT_APP_EMBEDLY_KEY\r\n export default firebase_config;","import { BUTTON } from '../constants'\r\n\r\nconst GREY = '#AAA';\r\nconst PINK = '#FD478A';\r\nconst WHITE = 'white';\r\n\r\nexport function selectButton(button){\r\n  return {\r\n    type : BUTTON,\r\n    selectedButton : button,\r\n    defaultStyle: _selectStyle(button).style_d,\r\n    groupStyle: _selectStyle(button).style_g,\r\n    editStyle: _selectStyle(button).style_e\r\n  }\r\n}\r\n\r\nfunction _selectStyle(button){\r\n  switch(button) {\r\n    case 'groups':\r\n      return {\r\n        style_d: {color: GREY},\r\n        style_g: {color: PINK},\r\n        style_e: {color: GREY}\r\n      }\r\n    case 'edit' :\r\n      return {\r\n        style_d: {color: GREY},\r\n        style_g: {color: GREY},\r\n        style_e: {color: PINK}\r\n      }\r\n    default:\r\n      return {\r\n        style_d: {color: WHITE},\r\n        style_g: {color: GREY},\r\n        style_e: {color: GREY}\r\n      }\r\n  }\r\n};\r\n","import { GROUP }  from '../constants'\r\nimport FirebaseDAO from '../FirebaseDao'\r\nimport config  from '../config'\r\nimport { selectButton } from './Button'\r\n\r\nconst dao = new FirebaseDAO(config);\r\n\r\nexport function getArticle(articles, groupName, logoUrl) {\r\n  if (articles) {\r\n    let items = Object.keys(articles).map(key => articles[key]);\r\n    \r\n    console.log('getArticle', items);\r\n\r\n    if (items && items.length > 0) {\r\n      \r\n      \r\n      return {\r\n        type: GROUP,\r\n        articles: items.reverse(),\r\n        groupName: groupName,\r\n        logoUrl: logoUrl\r\n      }\r\n    }\r\n  } else {\r\n    return {\r\n      type: GROUP,\r\n      articles: null,\r\n      groupName: groupName,\r\n      logoUrl: logoUrl\r\n    }\r\n  }\r\n}\r\n\r\nexport function getGroup(groupName, logoUrl) {\r\n  return dispatch => {\r\n    dao.listGroupArticle(groupName)\r\n      .then(articles => {\r\n        \r\n        console.log('listGroupArticle', articles);\r\n\r\n        dispatch(getArticle(articles, groupName, logoUrl))\r\n      });\r\n  }\r\n}\r\n\r\nexport function groupSelect(groupName){\r\n  return dispatch => {\r\n    dao.getGroup(groupName).once('value', snapshot => {\r\n      if(snapshot.val()) {\r\n        const logoUrl = snapshot.val().logoUrl;\r\n        dispatch(getGroup(groupName, logoUrl));\r\n        dispatch(selectButton());\r\n      }\r\n    })\r\n  }\r\n}","import { USER, GROUP,ALL } from '../constants'\r\nimport firebase from 'firebase';\r\nimport firebaseui from 'firebaseui';\r\nimport FirebaseDao from '../FirebaseDao'\r\nimport config from '../config'\r\nimport { groupSelect } from './Group'\r\n\r\nconst dao = new FirebaseDao(config);\r\n\r\nexport function userArticles() {\r\n  return {\r\n    type: USER\r\n  }\r\n}\r\n\r\nexport function getArticles(articles) {\r\n  const items = [];\r\n  \r\n  articles.forEach(article => {\r\n    const item = article.val();\r\n    item['key'] = article.key;\r\n    items.push(item);\r\n  });\r\n  \r\n  \r\n  return {\r\n    type : ALL,\r\n    articles : items.reverse()\r\n  }\r\n}\r\n\r\nexport function loadArticles() {\r\n  // console.log('action loadArticles');\r\n  return dispatch => {\r\n    dao.list(25, articles => dispatch(getArticles(articles)));\r\n  };\r\n}\r\nexport function updateArticle(postData){\r\n  return dispatch => {\r\n    dao.update(dao.newKey(), postData).then(() => {\r\n      dispatch(groupSelect(postData.groupName));\r\n    });\r\n  };\r\n}\r\nexport function groupArticles(articles) {\r\n  return {\r\n    type: GROUP,\r\n    articles: articles\r\n  }\r\n}","import firebase from 'firebase';\r\nimport React, { Component } from 'react';\r\nimport './PopCard.css';\r\nimport { userArticles, loadArticles } from './actions/Article';\r\nimport { connect } from 'react-redux';\r\n\r\nclass PopCard extends Component{\r\n  logout(){\r\n    firebase.auth().signOut();\r\n  }\r\n  render(){\r\n    const { dispatch } = this.props;\r\n    if(this.props.isPop){\r\n      return(\r\n        <div className=\"card_pop\">\r\n          <div className=\"card_pop_arrow\"/>\r\n          <div>\r\n          <a href=\"#\" onClick={ ()=>dispatch(userArticles()) }>내 글만 보기</a>\r\n          </div>\r\n          <div>\r\n          <a href=\"#\" onClick={ ()=>dispatch(loadArticles()) }>전체 글 보기</a>\r\n          </div>\r\n          <div>\r\n            <a href=\"#\" onClick={ ()=>this.logout() }>로그아웃</a>\r\n          </div>\r\n        </div>);\r\n    }else{\r\n      return <div/>\r\n    }\r\n  }\r\n}\r\nexport default connect()(PopCard)","import React, { Component } from 'react';\r\nimport firebase from 'firebase';\r\nimport firebaseui from 'firebaseui';\r\nimport FirebaseDao from './FirebaseDao';\r\nimport config from './config';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Login extends Component {\r\n  constructor (props) {\r\n    super(props);\r\n    this.ui = (new FirebaseDao(config)).getUI();\r\n    this.dao = new FirebaseDao(config);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const uiConfig = {\r\n      callbacks: {\r\n        'signInSuccess': (currentUser)=> {\r\n          this.dao.addUserTx({\r\n            email: currentUser.email,\r\n            displayName: currentUser.displayName,\r\n            photoURL: currentUser.photoURL,\r\n            uid: currentUser.uid\r\n          });\r\n          \r\n          return true;\r\n        }\r\n      },\r\n      'signInOptions': [\r\n        firebase.auth.GoogleAuthProvider.PROVIDER_ID\r\n      ]\r\n    };\r\n\r\n    this.ui.start('#firebaseui-auth', uiConfig);\r\n  }\r\n  componentWillUnmount() {\r\n    this.ui.reset();\r\n  }\r\n  render() {\r\n    return (\r\n        <div id='firebaseui-auth'></div>\r\n    );\r\n  }\r\n};\r\n\r\n// function mapStateToProps(state, ownProps) {\r\n//   console.log(ownProps);\r\n\r\n//   return {\r\n//     id: ownProps.params.id,\r\n//     filter: ownProps.location.query.filter\r\n//   };\r\n// }\r\n\r\n// export default connect(mapStateToProps)(Login);\r\nexport default Login;","import React, { Component } from 'react';\r\nimport firebase from 'firebase';\r\nimport './Profile.css';\r\nimport PopCard from './PopCard';\r\nimport { Link } from 'react-router-dom';\r\nimport Login from './Login';\r\n\r\nclass Profile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state={\r\n      user: undefined,\r\n      isPop: false\r\n    }\r\n  }\r\n  componentWillMount() {\r\n    firebase.auth().onAuthStateChanged(user => {\r\n      console.log('user', user);\r\n      if (user) {\r\n        this.setState({ user: user });\r\n      } else {\r\n        this.setState({ user: undefined });\r\n      }\r\n    })\r\n  }\r\n  popProfile() {\r\n    this.setState({ isPop: !this.state.isPop })\r\n  }\r\n  \r\n  render() {\r\n    const user = this.state.user;\r\n    if (user) {\r\n      return (\r\n        <span>\r\n          <div className=\"profile-img-wrap\">\r\n            <a href=\"#\" onClick={ (e) => this.popProfile(e) }>\r\n              <img src={ user.photoURL } alt=\"profiles\" className=\"profile-img\"/>\r\n            </a>\r\n          </div>\r\n          \r\n          <PopCard isPop={ this.state.isPop }/>\r\n        </span>\r\n      )\r\n    } else {\r\n      return (<div className=\"profile_name\"><Login /></div>)\r\n    }\r\n  }\r\n  \r\n}\r\nexport default Profile;","import React, { Component } from 'react'\r\nimport './Card.css'\r\n\r\nexport default class Card extends Component {\r\n  render() {\r\n    let cardInfo = this.props.cardInfo;\r\n    if (cardInfo) {\r\n      return (\r\n        <a className=\"card\" href={cardInfo.url} target=\"_blank\">\r\n          <div className=\"card_image\">\r\n            { \r\n              cardInfo.links.thumbnail !== undefined \r\n              && <img src={ cardInfo.links.thumbnail[0].href } \r\n                    alt={ cardInfo.meta.title } \r\n                    className=\"width100 card_img\" />\r\n            }\r\n            \r\n          </div>\r\n          <div className=\"borderTop\">\r\n          <div className=\"card_text\">\r\n            <p className=\"card_title\">{ cardInfo.meta.title }</p>\r\n            <p className=\"card_desc\">{ cardInfo.meta.description }</p>\r\n            <p className=\"card_provider\">{ cardInfo.meta.site }</p>\r\n          </div>\r\n          </div>\r\n        </a>\r\n      )\r\n    }\r\n    else {\r\n      return null;\r\n    }\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport './Editor.css';\r\nimport firebase from 'firebase';\r\nimport Profile from './Profile';\r\nimport getEmbedly from './Embedly';\r\nimport Card from './Card';\r\nimport { connect } from 'react-redux'\r\nimport { updateArticle } from './actions/Article'\r\nimport { groupSelect } from './actions/Group'\r\n\r\nclass Editor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.onPaste = this.onPaste.bind(this);\r\n    this.editorChange = this.editorChange.bind(this);\r\n    this.getCard = this.getCard.bind(this);\r\n    this.hasValue = this.hasValue.bind(this);\r\n    this.detectURL = this.detectURL.bind(this);\r\n    this.getArticle = this.getArticle.bind(this);\r\n    this.getForcedState = this.getForcedState.bind(this);\r\n    this.state = {\r\n      embedlyUrl: undefined,\r\n      content: undefined\r\n    };\r\n  }\r\n  getForcedState(embedlyUrl, content) {\r\n    return new Promise(resolve => {\r\n      if (embedlyUrl) {\r\n        getEmbedly(embedlyUrl).then(response => {\r\n          let cardInfo = Object.assign({}, response.data);\r\n\r\n          resolve({\r\n            embedlyUrl,\r\n            content,\r\n            cardInfo\r\n          });\r\n        }).catch(e => {\r\n          resolve({\r\n            embedlyUrl: undefined,\r\n            content: undefined,\r\n            cardInfo: undefined\r\n          });\r\n        });\r\n      } \r\n      else {\r\n        resolve({\r\n          content: content\r\n        })\r\n      }\r\n    })\r\n  }\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    if (this.hasValue(this.state.content)) {\r\n      const article = this.getArticle();\r\n\r\n      if (article) {\r\n        const { dispatch, groupName } = this.props;\r\n        dispatch(updateArticle({...article, groupName}));\r\n        // dispatch(groupSelect(groupName))\r\n        this.forceUpdate();\r\n      }\r\n\r\n      this.setState({\r\n        embedlyUrl : undefined,\r\n        content : undefined,\r\n        cardInfo : undefined\r\n      });\r\n    }\r\n\r\n  }\r\n  onPaste(event) {\r\n    const content = event.currentTarget.textContent;\r\n    event.clipboardData.items[0].getAsString(text => {\r\n      const checkText = this.detectURL(text);\r\n      if (checkText) {\r\n        this.getForcedState(checkText, content + text).then(obj => {\r\n          this.setState(obj)\r\n        })\r\n      }\r\n    })\r\n  }\r\n  editorChange(event) {\r\n    let checkText = this.detectURL(event.currentTarget.textContent);\r\n\r\n    if (!this.state.embedlyUrl && (event.keyCode === 32 \r\n      || event.keyCode === 13) && checkText) {\r\n        \r\n      this.getForcedState(checkText, event.currentTarget.textContent)\r\n        .then(obj => this.setState(obj))\r\n    } \r\n    // else {\r\n    //   this.getForcedState(undefined, event.currentTarget.textContent)\r\n    //     .then(obj => this.setState(obj))\r\n    // }\r\n  }\r\n  getArticle(){\r\n    const article = {};\r\n    const user = firebase.auth().currentUser;\r\n\r\n    // console.log('user', user);\r\n    article.user = {\r\n        email : user.email,\r\n        displayName : user.displayName,\r\n        uid : user.uid\r\n    };\r\n    article.content = this.state.content;\r\n    if (this.state.embedlyUrl) {\r\n      article.cardInfo = this.state.cardInfo;\r\n    }\r\n\r\n    return article;\r\n  }\r\n  detectURL(text) {\r\n    const urls = text.match(/(https?:\\/\\/[^\\s]+)/g) || text.match(/(www.[^\\s]+)/g);\r\n    if((urls !== null) && (urls.length > 0)) return urls[0];\r\n    else return undefined;\r\n  }\r\n  getCard(embedlyUrl){\r\n    if(embedlyUrl){\r\n      return(\r\n        <div>{embedlyUrl}</div>\r\n      );\r\n    }else{\r\n      return(<div/>);\r\n    }\r\n  }\r\n  hasValue(value) {\r\n    if((value && (typeof value) === \"string\"))\r\n      return (!value) ? false : (value.trim() === \"\" ? false : true)\r\n    else \r\n      return false;\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"wrapEditor\">\r\n        <div className=\"editor_header\">\r\n          <div className=\"today_title\">\r\n            무엇을 공유할까요?\r\n          </div>\r\n          <Profile/>\r\n        </div>\r\n        <div className=\"textEditor\">\r\n          <div className=\"innerEdit\"\r\n            contentEditable=\"true\"\r\n            placeholder=\"글쓰기...\"\r\n            onPaste={this.onPaste}\r\n            onKeyUp={this.editorChange}\r\n            dangerouslySetInnerHTML={{__html: this.state.content}}></div>\r\n            <Card cardInfo={this.state.cardInfo}/>\r\n        </div>\r\n        <div className=\"actionBar\">\r\n          <button className=\"upload\"\r\n            disabled={!this.hasValue(this.state.content)}\r\n            onClick={this.handleSubmit}><span>스탠드업!</span></button>\r\n        </div>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps ) => {\r\n  return {groupName: state.default.groupName}\r\n}\r\nexport default connect(mapStateToProps)(Editor);\r\n","import request from 'axios';\r\nimport { embedlyKey } from './config';\r\n\r\nexport default function getEmbedly(url) {\r\n  return request.get('https://iframe.ly/api/iframely', {\r\n    params: {\r\n      url: url,\r\n      api_key: embedlyKey\r\n    }\r\n  })\r\n}","import React,{Component} from 'react';\r\nimport config from './config';\r\nimport './GroupAdd.css';\r\nimport FirebaseDao from './FirebaseDao';\r\nimport Dropzone from 'react-dropzone'\r\nimport imageUpload from './FileUtil';\r\n\r\nclass GroupAdd extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.dao = new FirebaseDao(config);\r\n    this.state = {\r\n      groupImage: undefined,\r\n      isSpin: false,\r\n      groupName: \"\",\r\n      groupNameUnique: false\r\n    }\r\n  }\r\n\r\n  groupNameChanged(event) {\r\n    let checkText = event.currentTarget.textContent;\r\n    if (event.keyCode===13 && checkText) {\r\n      this.submit();\r\n    } else {\r\n      this.setState({\r\n        groupName : checkText,\r\n        groupNameUnique :false\r\n      });\r\n    }\r\n  }\r\n\r\n  submit() {\r\n    // console.log(this.state.groupName,\r\n    //   this.state.groupImage,\r\n    //   this.state.groupNameUnique);\r\n\r\n    if (this.state.groupNameUnique) {\r\n      if (this.state.groupName && \r\n        this.state.groupImage) {\r\n        this.dao.addGroup({\r\n          name : this.state.groupName,\r\n          logoUrl : this.state.groupImage,\r\n          owner : {\r\n            email : this.dao.currentUser.email,\r\n            displayName :this.dao.currentUser.displayName,\r\n            photoURL : this.dao.currentUser.photoURL\r\n          }\r\n        }).then(name => {\r\n          // browserHistory.push('/groups/'+ name);\r\n          alert('그룹이 생성 되었습니다.');\r\n          this.props.popGroupAdd(false);\r\n        }).catch(e => { console.log(e) });\r\n      }\r\n      else {\r\n        alert('그룹이름과 이미지를 지정해 주셔야 합니다.');\r\n      }\r\n    } else {\r\n      alert('그룹이름 중복체크를 해주세요.');\r\n    }\r\n  }\r\n\r\n  checkGroups(){\r\n    if (this.state.groupName && this.state.groupName!==\"\") {\r\n      this.dao.isValidGroup(this.state.groupName).then(exists => {\r\n        if (exists) {\r\n          alert(\"존재하는 그룹입니다.\");\r\n          this.setState({ groupNameUnique:false });\r\n        } else {\r\n          alert(\"가능한 이름입니다.\");\r\n          this.setState({groupNameUnique:true});\r\n        }\r\n      }).catch(err => {\r\n        console.log(err);\r\n      });\r\n    } else {\r\n      alert(\"그룹 이름을 지정해 주세요.\");\r\n    } \r\n  }\r\n\r\n  onDrop (acceptedFiles, rejectedFiles) {\r\n    if(rejectedFiles && rejectedFiles.length  > 0) {\r\n      alert(rejectedFiles[0].name  +\" 파일은 이미지가 아닙니다 \");\r\n    }\r\n\r\n    if (acceptedFiles && acceptedFiles.length > 0) {\r\n      this.setState({\r\n        isSpin: true\r\n      });\r\n      imageUpload(acceptedFiles, 1, downloadUrl => {\r\n        this.setState({\r\n          groupImage: downloadUrl,\r\n          isSpin: false\r\n        });\r\n      });\r\n    } else {\r\n      this.setState({\r\n        isSpin: false\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"group-add\">\r\n        <div className=\"wrap-title\">\r\n          <i onClick={ () => this.props.popGroupAdd(false) } \r\n            className=\"fa fa-times float-right fa-lg green\" ></i>\r\n          <div className=\"group-add-title \"\r\n             contentEditable=\"true\"\r\n             placeholder=\"그룹명을 입력하세요\"\r\n             onKeyUp={ (e) => this.groupNameChanged(e) }\r\n             dangerouslySetInnerHTML={ { __html: this.state.groupName } }\r\n             ></div>\r\n          <button onClick={ () => this.checkGroups() } \r\n            className=\"check-exists button-reverse\">\r\n            { this.state.groupNameUnique &&\r\n              <i className=\"fa fa-check-circle-o\"></i>\r\n            }\r\n            중복 확인\r\n          </button>\r\n\r\n        </div>\r\n        {this.state.groupImage &&\r\n          <img src={ this.state.groupImage } className=\"drop-file\" alt={ this.state.groupName }/>\r\n        }\r\n        {this.state.isSpin &&\r\n        <i className=\"fa fa-spinner fa-2x green\" ></i>\r\n        }\r\n        {!this.state.groupImage && !this.state.isSpin &&\r\n          <Dropzone \r\n            onDrop={(acceptedFiles, rejectedFiles) => this.onDrop(acceptedFiles, rejectedFiles)} \r\n            accept=\"image/*\" \r\n            className=\"drop-file padding-top\">\r\n            {({getRootProps, getInputProps, isDragActive, isDragReject}) => (\r\n              <div {...getRootProps()}>\r\n                <input {...getInputProps()} />\r\n                {!isDragActive && 'Click here or drop a file to upload!'}\r\n                {isDragReject && \"File type not accepted, sorry!\"}\r\n              </div>\r\n            )}\r\n          </Dropzone>\r\n        }\r\n        <button onClick={ () => this.submit() }>새 그룹 생성</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GroupAdd;","import firebase from 'firebase'\r\n\r\nexport default function fileupload(files, size, callback) {\r\n  if (size && files.length !== size){\r\n    if (size === 1) alert(\"file은 하나만 업로드 가능합니다\");\r\n    else alert(\"지정된 파일 갯수랑 같지 않습니다.\")\r\n    return;\r\n  }\r\n  const storageRef = firebase.storage().ref();\r\n  files.forEach(function(file){\r\n    const ext = file.name.split('.').pop();\r\n    const metadata = {};\r\n    if(ext === 'jpg') metadata.contentType = 'image/jpeg';\r\n    if(ext === 'png') metadata.contentType = 'image/png';\r\n    if(ext === 'gif') metadata.contentType = 'image/gif';\r\n\r\n    // Upload file and metadata to the object 'images/mountains.jpg'\r\n    const uploadTask = storageRef.child('images/' + file.name).put(file, metadata);\r\n\r\n    // Listen for state changes, errors, and completion of the upload.\r\n    uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED, // or 'state_changed'\r\n      snapshot => {\r\n        // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\r\n        const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n        console.log('Upload is ' + progress + '% done');\r\n        switch (snapshot.state) {\r\n          case firebase.storage.TaskState.PAUSED: // or 'paused'\r\n            console.log('Upload is paused');\r\n            break;\r\n          case firebase.storage.TaskState.RUNNING: // or 'running'\r\n            console.log('Upload is running');\r\n            break;\r\n          default :\r\n            //do nothing\r\n        }\r\n      }, err => {\r\n        switch (err.code) {\r\n          case 'storage/unauthorized':\r\n            console.log(\"unauthorized user\");\r\n            break;\r\n          case 'storage/canceled':\r\n            console.log(\"user cancel!\");\r\n            break;\r\n          case 'storage/unknown':\r\n            console.log(\"unexpected error\")\r\n            break;\r\n          default:\r\n            //do nothing\r\n        }\r\n      }, () => {\r\n        uploadTask.snapshot.ref.getDownloadURL().then(downloadURL => callback(downloadURL));\r\n      });\r\n  })\r\n\r\n}\r\n","import React,{Component} from 'react'\r\nimport './GroupCard.css'\r\nimport { browserHistory } from 'react-router'\r\nimport { groupSelect } from './actions/Group'\r\nimport { connect } from 'react-redux'\r\n\r\nclass GroupCard extends Component{\r\n  changeGroup(groupName){\r\n    const { dispatch } = this.props;\r\n    dispatch(groupSelect(groupName));\r\n    // browserHistory.push('/groups/'+groupName);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n     <div className=\"style_bg\">\r\n       <img src={this.props.imageUrl} className=\"style_img\" alt={this.props.title} />\r\n       <div className=\"style_title\" >\r\n         &nbsp;{this.props.title}\r\n         <button className=\"style_chk\" onClick={ () => this.changeGroup(this.props.title) }>\r\n           <i className=\"fa fa-check\">선택</i>\r\n         </button>\r\n       </div>\r\n     </div>\r\n   )\r\n  }\r\n}\r\nlet mapStateToProps = (state, ownProps) => {\r\n  return {...state.default,...ownProps}\r\n}\r\nexport default connect(mapStateToProps)(GroupCard);","import React, { Component } from 'react';\r\nimport GroupAdd from './GroupAdd';\r\nimport GroupCard from './GroupCard'\r\nimport './GroupList.css';\r\nimport FirebaseDao from './FirebaseDao';\r\nimport config from './config';\r\nimport Slider from 'react-slick';\r\nimport 'slick-carousel';\r\n\r\nconst dao = new FirebaseDao(config);\r\n\r\nclass RenderGroupCardList extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.settings = {\r\n      dots: true,\r\n      infinite: true,\r\n      speed: 500,\r\n      slidesToShow: 1,\r\n      slidesToScroll: 1\r\n    };\r\n    this.state = {\r\n      groupDOMs: [],\r\n    }\r\n  }\r\n  createNewDOMs() {\r\n    const newDOMs = [];\r\n    for (const title in this.props.groups) {\r\n      if (this.props.groups.hasOwnProperty(title))\r\n        newDOMs.push(\r\n          <div key={title}>\r\n            <GroupCard imageUrl={this.props.groups[title][\"logoUrl\"]}\r\n                       title={title} />\r\n          </div>);\r\n    }\r\n    return newDOMs;\r\n  }\r\n  componentWillMount(){\r\n    this.setState({\r\n      groupDOMs: [...this.createNewDOMs()]\r\n    })\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.props.groups !== prevProps.groups) {\r\n      this.setState({\r\n        groupDOMs: [...this.createNewDOMs()]\r\n      })\r\n    }\r\n  }\r\n  render(){\r\n    return (\r\n      <Slider {...this.settings}>\r\n        {this.state.groupDOMs}\r\n      </Slider>\r\n    );\r\n  }\r\n}\r\n\r\nclass GroupList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.groups = undefined;\r\n    this.state = {\r\n      isPop: false,\r\n      isLoaded: false\r\n    }\r\n  }\r\n  componentWillMount(){\r\n    dao.groupList.on('value', snapshot => {\r\n      console.log('grouplist value', {...snapshot.val()});\r\n      this.setState({\r\n        groups: {...snapshot.val()},\r\n        isLoaded: true\r\n      });\r\n    });\r\n  }\r\n  popGroupAdd(isPop) {\r\n    this.setState({ isPop });\r\n  }\r\n  // componentWillMount()\r\n  renderGroupAdd() {\r\n    if (this.state.isPop) {\r\n      return <GroupAdd popGroupAdd={ (isPop) => this.popGroupAdd(isPop) } />;\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"group-chooser\">\r\n          {this.state.isLoaded &&\r\n            <RenderGroupCardList groups={this.state.groups}/>\r\n          }\r\n          <button onClick={ () => this.popGroupAdd(true) } className=\"groupAddBtn\">\r\n            <i className=\"fa fa-plus-circle\">새 그룹</i>\r\n          </button>\r\n        </div>\r\n        {this.renderGroupAdd()}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GroupList;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Editor from \"./Editor\";\r\nimport GroupList from './GroupList';\r\nimport Profile from './Profile';\r\nimport { selectButton } from './actions/Button';\r\nimport './Buttons.css';\r\n\r\nclass Buttons extends Component {\r\n  constructor() {\r\n    super();\r\n  }\r\n  \r\n  selectButton(args) {\r\n    const { dispatch } = this.props;\r\n    dispatch(selectButton(args));\r\n  }\r\n  \r\n  renderActionBar(selected) {\r\n    switch(selected) {\r\n      case 'groups':\r\n        return <GroupList />\r\n      case 'edit':\r\n        return <Editor submit={ this.submit } />\r\n      default: \r\n        return null;\r\n    }\r\n  }\r\n  render() {\r\n    const { \r\n      logoUrl, \r\n      groupName, \r\n      selectedButton, \r\n      defaultStyle, \r\n      groupStyle, \r\n      editStyle \r\n    } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"buttons\">\r\n          <Profile/>\r\n          <a onClick={ () => this.selectButton('edit') }>\r\n            <i className=\"fa fa-pencil-square fa-lg\" style={ editStyle }></i>\r\n          </a>\r\n          <a onClick={ () => this.selectButton('groups') }>\r\n            <i className=\"fa fa-handshake-o fa-lg\" style={ groupStyle }></i>\r\n          </a>\r\n          <a onClick={ () => this.selectButton() }>\r\n            <i className=\"fa fa-window-minimize fa-lg\" style={ defaultStyle }></i>\r\n          </a>\r\n        </div>\r\n        {this.renderActionBar(selectedButton)}\r\n        { groupName && !selectedButton &&\r\n          <div style={ { width: '100%', height: \"355px\", position: 'relative' } }>\r\n            <img src={ logoUrl } alt={ groupName } style={ { width:'100%', height: \"355px\" } }/>\r\n            <div className=\"style_title\" style={ { width:\"100%\" } }>{ groupName }</div>\r\n          </div>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps ) => {\r\n  return {...state.default, ...ownProps}\r\n}\r\n\r\nexport default connect(mapStateToProps)(Buttons);","import React, { Component } from 'react';\r\nimport Card from './Card'\r\nimport './CardList.css'\r\nimport { connect } from 'react-redux'\r\nimport { loadArticles } from './actions/Article'\r\n\r\nclass CardList extends Component {\r\n  componentWillMount() {\r\n    const { dispatch } = this.props;\r\n    \r\n    dispatch(loadArticles());\r\n  }\r\n  createCard(item, index){\r\n    return(<li className=\"list_row\" key={item.key}>\r\n              <pre className=\"common_margin grey_text\">{item.content}</pre>\r\n              {\r\n                (item.cardInfo)?<Card cardInfo={item.cardInfo}/>:\"\"\r\n              }\r\n            </li>);\r\n  }\r\n  render() {\r\n    if(this.props.articles && this.props.articles.length > 0)\r\n      return <ul>{ this.props.articles.map(this.createCard) }</ul>;\r\n    else return <div key=\"015b\"/>\r\n  }\r\n}\r\nexport default connect(\r\n  state => {\r\n    // console.log('CardList get state', state);\r\n    return { articles: state.default.articles };\r\n  }\r\n)(CardList);","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport logo from './img/stand_up_logo.png';\nimport './Home.css';\nimport Buttons from './Buttons';\nimport CardList from './CardList'\n\n\nclass Home extends Component {\n  constructor(){\n    super();\n  }\n  \n  render() {\n    // const groupName = 'test_group';\n    const groupName = this.props.groupName || null;\n    console.log('group name', groupName);\n\n    // const headerClass = 'app-header';\n    // const headerStyle = {\n    //   backgroundImage: 'url(' +logo+ ')'\n    // }\n    return (\n          \n      <div className=\"app\">\n        <div className=\"app-header\" \n          style={ { backgroundImage: 'url(' +logo+ ')', height: '45px' } } />     \n        <Buttons groupName={ groupName } />\n        {/* <Editor submit={ this.submit }/> */}\n        <CardList cardInfo={ this.cardInfo } />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps ) => {\n  return {...state.default, ...ownProps}\n}\n\nexport default connect(mapStateToProps)(Home);","import React, { Component } from 'react';\r\n\r\nexport default class NotFound extends Component {\r\n  render() {\r\n    return (\r\n      <div>Not Found!</div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\nimport { store } from './store/global'\r\nimport Home from './Home';\r\nimport NotFound from './NotFound';\r\nimport Login from './Login';\r\n\r\nexport default function App() {\r\n  return (\r\n    <Provider store={ store }>\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/standup\"><Home /></Route>\r\n          <Route><NotFound /></Route>\r\n        </Switch>\r\n      </Router>\r\n  </Provider>\r\n  );\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);","module.exports = __webpack_public_path__ + \"static/media/stand_up_logo.190ee485.png\";"],"sourceRoot":""}