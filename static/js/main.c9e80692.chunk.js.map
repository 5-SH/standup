{"version":3,"sources":["reducers/Article.js","constants.js","store/global.js","FirebaseDao.js","config.js","actions/Article.js","PopCard.js","Login.js","Profile.js","Card.js","Editor.js","Embedly.js","CardList.js","Home.js","NotFound.js","App.js","index.js","img/stand_up_logo.png"],"names":["getArticles","state","action","console","log","type","articles_of_mine","cUser","firebase","auth","currentUser","articles","forEach","article","user","uid","push","Object","assign","reducer","combineReducers","articleReducers","routing","routerReducer","store","createStore","applyMiddleware","thunk","firebaseui","require","FirebaseDao","config","apps","length","this","firebaseApp","initializeApp","postData","database","ref","child","key","updates","update","Promise","resolve","remove","off","pagesize","callback","orderByKey","limitToLast","on","AuthUI","getInstance","signOut","firebase_config","apiKey","process","authDomain","databaseURL","storageBucket","messagingSenderId","dao","loadArticles","dispatch","list","items","item","val","reverse","PopCard","props","isPop","className","href","onClick","logout","Component","connect","Login","ui","getUI","uiConfig","window","location","origin","GoogleAuthProvider","PROVIDER_ID","start","reset","id","Profile","undefined","onAuthStateChanged","setState","popProfile","displayName","src","photoURL","alt","Card","cardInfo","url","target","links","thumbnail","meta","title","description","site","Editor","handleSubmit","bind","onPaste","editorChange","getCard","hasValue","detectURL","getArticle","getForcedState","embedlyUrl","content","request","get","params","api_key","then","response","data","catch","e","event","preventDefault","submit","currentTarget","textContent","clipboardData","getAsString","text","checkText","obj","keyCode","email","urls","match","value","trim","contentEditable","placeholder","onKeyUp","dangerouslySetInnerHTML","__html","disabled","CardList","index","map","createCard","default","Home","newKey","forceUpdate","to","logo","NotFound","App","exact","path","ReactDOM","render","document","getElementById","module","exports"],"mappings":"yUAIe,SAASA,EAAYC,EAAOC,GAIzC,GAFAC,QAAQC,IAAI,uBAAwBH,EAAOC,EAAOG,MCNhC,SDQfH,EAAOG,KAAc,CACtB,IAAIC,EAAmB,GACnBC,EAAQC,IAASC,OAAOC,YAM5B,OALAT,EAAMU,SAASC,SAAQ,SAACC,GAClBA,EAAQC,KAAKC,KAAOR,GAAUM,EAAQC,KAAKC,MAASR,EAAMQ,KAC5DT,EAAiBU,KAAKH,MAGnBI,OAAOC,OAAO,GAAIjB,EAAO,CAAEU,SAAUL,IAEzC,OAAGJ,EAAOG,KAENY,OAAOC,OAAO,GAAGjB,EAAMC,GEXlC,IAAMiB,EAAUC,YAAgB,2BAC3BC,GAD0B,IAE7BC,QAASC,mBAIEC,EAAQC,YACnBN,EACAO,YAAgBC,M,uDChBdC,G,wBAAaC,EAAQ,KAEJC,E,WACnB,WAAYC,GAAS,oBACfvB,IAASwB,MAAQxB,IAASwB,KAAKC,OAAS,EAC1CC,KAAKC,YAAc3B,IAASwB,KAAK,GAEjCE,KAAKC,YAAc3B,IAAS4B,cAAcL,G,6DAI5C,OAAOG,KAAKC,c,6BAGPE,GACL,OAAO7B,IAAS8B,WAAWC,MAAMC,MAAM,SAASxB,KAAKqB,K,6BAEhDI,EAAIJ,GACT,IAAMK,EAAU,GAGhB,OAFAA,EAAQ,UAAYD,GAAOJ,EAC3BK,EAAQ,qBAAuBD,GAAOJ,EAC/B7B,IAAS8B,WAAWC,MAAMI,OAAOD,K,6BAEnCD,GACL,OAAO,IAAIG,SAAQ,SAAAC,GACjBrC,IAAS8B,WAAWC,IAAI,WAAWC,MAAMC,GAAKK,SAC9CtC,IAAS8B,WAAWC,IAAI,sBAAsBC,MAAMC,GAAKK,SACzDD,EAAQJ,Q,4BAIV,OAAOjC,IAAS8B,WAAWC,MAAMQ,Q,+BAGjC,OAAOvC,IAAS8B,WAAWC,MAAMC,MAAM,SAASxB,OAAOyB,M,2BAKpDO,EAAUC,GAEXzC,IAAS8B,WAAWC,IAAI,SACfW,aAAaC,YAAYH,GACzBI,GAAG,SAAQ,SAACzC,GACXsC,EAAStC,Q,iCAIZ8B,GACT,OAAO,IAAIG,SAAQ,SAAAC,GACjBrC,IAAS8B,WAAWC,IAAI,UAAUE,GACzBW,GAAG,SAAQ,SAACzC,GACXkC,EAAQlC,W,8BAKlB,OAAOiB,EAAWnB,KAAK4C,OAAOC,eAAiB,IAAI1B,EAAWnB,KAAK4C,OAAO7C,IAASC,U,+BAIrF,OAAOD,IAASC,OAAO8C,c,KCtDXC,EARQ,CACtBC,OAAQC,0CACRC,WAAYD,gCACZE,YAAaF,uCACbG,cAAeH,4BACfI,kBAAmBJ,gBCAfK,EAAM,IAAIjC,EAAYC,GA2BrB,SAASiC,IAId,OAFA7D,QAAQC,IAAI,uBAEL,SAAC6D,GACNF,EAAIG,KAAK,IAAI,SAACvD,GAAD,OAAcsD,EAvBxB,SAAqBtD,GAC1B,IAAMwD,EAAQ,GASd,GARAxD,EAASC,SAAQ,SAACC,GAChB,IAAMuD,EAAOvD,EAAQwD,MACrBD,EAAI,IAAUvD,EAAQ4B,IACtB0B,EAAMnD,KAAKoD,MAGbjE,QAAQC,IAAI,qBAAsB+D,GAE9BA,GAASA,EAAMlC,OAAS,EAC1B,MAAO,CACL5B,KJxBa,MIyBbM,SAAWwD,EAAMG,WAUiBtE,CAAYW,Q,IC/B9C4D,E,uKAEF/D,IAASC,OAAO8C,Y,+BAET,IAAD,OACEU,EAAa/B,KAAKsC,MAAlBP,SACR,OAAG/B,KAAKsC,MAAMC,MAEV,yBAAKC,UAAU,YACb,yBAAKA,UAAU,mBACf,6BACA,uBAAGC,KAAK,IAAIC,QAAU,kBAAIX,EDV3B,CACL5D,KJRgB,WKiBV,qCAEA,6BACA,uBAAGsE,KAAK,IAAIC,QAAU,kBAAIX,EAASD,OAAnC,qCAEA,6BACE,uBAAGW,KAAK,IAAIC,QAAU,kBAAI,EAAKC,WAA/B,8BAIC,kC,GArBSC,aAyBPC,gBAAUR,GCYVS,E,kDAnCb,WAAaR,GAAQ,IAAD,8BAClB,cAAMA,IACDS,GAAM,IAAInD,EAAYC,GAASmD,QAFlB,E,gEAMlB,IAAMC,EAAW,CACf,iBAAoBC,OAAOC,SAASC,OACpC,cAAiB,CACf9E,IAASC,KAAK8E,mBAAmBC,cAIrCtD,KAAK+C,GAAGQ,MAAM,mBAAoBN,K,6CAGlCjD,KAAK+C,GAAGS,U,+BAGR,OACI,yBAAKC,GAAG,wB,GArBIb,aC4CLc,E,kDA3Cb,WAAYpB,GAAQ,IAAD,8BACjB,cAAMA,IACDvE,MAAM,CACTa,UAAM+E,EACNpB,OAAO,GAJQ,E,iEAOG,IAAD,OACnBjE,IAASC,OAAOqF,oBAAmB,SAAAhF,GACjCX,QAAQC,IAAI,OAAQU,GAChBA,EACF,EAAKiF,SAAS,CAAEjF,KAAMA,IAEtB,EAAKiF,SAAS,CAAEjF,UAAM+E,S,mCAK1B3D,KAAK6D,SAAS,CAAEtB,OAAQvC,KAAKjC,MAAMwE,U,+BAG3B,IAAD,OACD3D,EAAOoB,KAAKjC,MAAMa,KACxB,OAAIA,EAEA,8BACE,yBAAK4D,UAAU,gBACb,uBAAGC,KAAK,IAAIC,QAAU,kBAAM,EAAKoB,eAAiBlF,EAAKmF,cAGzD,yBAAKvB,UAAU,oBACb,yBAAKwB,IAAMpF,EAAKqF,SAAWC,IAAI,WAAW1B,UAAU,iBAGtD,kBAAC,EAAD,CAASD,MAAQvC,KAAKjC,MAAMwE,SAIxB,yBAAKC,UAAU,gBAAe,kBAAC,EAAD,W,GAvCtBI,a,4BCJDuB,E,uKAEjB,IAAIC,EAAWpE,KAAKsC,MAAM8B,SAC1B,OAAIA,EAEA,uBAAG5B,UAAU,OAAOC,KAAM2B,EAASC,IAAKC,OAAO,UAC7C,yBAAK9B,UAAU,cACb,yBAAKwB,IAAMI,EAASG,MAAMC,UAAU,GAAG/B,KAAOyB,IAAME,EAASK,KAAKC,MAAQlC,UAAU,uBAEtF,yBAAKA,UAAU,aACf,yBAAKA,UAAU,aACb,uBAAGA,UAAU,cAAe4B,EAASK,KAAKC,OAC1C,uBAAGlC,UAAU,aAAc4B,EAASK,KAAKE,aACzC,uBAAGnC,UAAU,iBAAkB4B,EAASK,KAAKG,SAO5C,S,GApBqBhC,aCqJnBiC,E,kDAhJb,WAAYvC,GAAQ,IAAD,8BACjB,cAAMA,IACDwC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,QAAU,EAAKA,QAAQD,KAAb,gBACf,EAAKE,aAAe,EAAKA,aAAaF,KAAlB,gBACpB,EAAKG,QAAU,EAAKA,QAAQH,KAAb,gBACf,EAAKI,SAAW,EAAKA,SAASJ,KAAd,gBAChB,EAAKK,UAAY,EAAKA,UAAUL,KAAf,gBACjB,EAAKM,WAAa,EAAKA,WAAWN,KAAhB,gBAClB,EAAKO,eAAiB,EAAKA,eAAeP,KAApB,gBACtB,EAAKhH,MAAQ,CACXwH,gBAAY5B,EACZ6B,aAAS7B,GAZM,E,2DAeJ4B,EAAYC,GACzB,OAAO,IAAI9E,SAAQ,SAAAC,GCrBR,IAAoB0D,EDsBzBkB,GCtByBlB,EDuBhBkB,ECtBVE,IAAQC,IAAI,gCAAiC,CAClDC,OAAQ,CACNtB,IAAKA,EACLuB,QPAqBpE,6BMmBIqE,MAAK,SAAAC,GAC1B,IAAI1B,EAAWrF,OAAOC,OAAO,GAAI8G,EAASC,MAE1CpF,EAAQ,CACN4E,aACAC,UACApB,gBAED4B,OAAM,SAAAC,GACPtF,EAAQ,CACN4E,gBAAY5B,EACZ6B,aAAS7B,EACTS,cAAUT,OAKdhD,EAAQ,CACN6E,QAASA,S,mCAKJU,GACPlG,KAAKmF,SAASnF,KAAKjC,MAAMyH,WAC3BU,EAAMC,iBACNnG,KAAKsC,MAAM8D,OAAOpG,KAAKqF,cACvBrF,KAAK6D,SAAS,CACZ0B,gBAAa5B,EACb6B,aAAU7B,EACVS,cAAWT,O,8BAKTuC,GAAQ,IAAD,OACPV,EAAUU,EAAMG,cAAcC,YACpCJ,EAAMK,cAActE,MAAM,GAAGuE,aAAY,SAAAC,GACvC,IAAMC,EAAY,EAAKtB,UAAUqB,GAC7BC,GACF,EAAKpB,eAAeoB,EAAWlB,EAAUiB,GAAMZ,MAAK,SAAAc,GAClD,EAAK9C,SAAS8C,W,mCAKTT,GAAQ,IAAD,OACdQ,EAAY1G,KAAKoF,UAAUc,EAAMG,cAAcC,aAE9CtG,KAAKjC,MAAMwH,YAAiC,KAAlBW,EAAMU,SACd,KAAlBV,EAAMU,UAAmBF,GAE5B1G,KAAKsF,eAAeoB,EAAWR,EAAMG,cAAcC,aAChDT,MAAK,SAAAc,GAAG,OAAI,EAAK9C,SAAS8C,Q,mCAQ/B,IAAMhI,EAAU,GACVC,EAAON,IAASC,OAAOC,YAa7B,OAVAG,EAAQC,KAAO,CACXiI,MAAQjI,EAAKiI,MACb9C,YAAcnF,EAAKmF,YACnBlF,IAAMD,EAAKC,KAEfF,EAAQ6G,QAAUxF,KAAKjC,MAAMyH,QACzBxF,KAAKjC,MAAMwH,aACb5G,EAAQyF,SAAWpE,KAAKjC,MAAMqG,UAGzBzF,I,gCAEC8H,GACR,IAAMK,EAAOL,EAAKM,MAAM,yBAA2BN,EAAKM,MAAM,iBAC9D,OAAa,OAATD,GAAmBA,EAAK/G,OAAS,EAAW+G,EAAK,QAChD,I,8BAECvB,GACN,OAAGA,EAEC,6BAAMA,GAGD,gC,+BAGFyB,GACP,SAAIA,GAA4B,kBAAXA,OACVA,GAAmC,KAAjBA,EAAMC,U,+BAKnC,OACE,yBAAKzE,UAAU,cACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,eAAf,sDAGA,kBAAC,EAAD,OAEF,yBAAKA,UAAU,cACb,yBAAKA,UAAU,YACb0E,gBAAgB,OAChBC,YAAY,wBACZnC,QAAShF,KAAKgF,QACdoC,QAASpH,KAAKiF,aACdoC,wBAAyB,CAACC,OAAQtH,KAAKjC,MAAMyH,WAC7C,kBAAC,EAAD,CAAMpB,SAAUpE,KAAKjC,MAAMqG,YAE/B,yBAAK5B,UAAU,aACb,4BAAQA,UAAU,SAChB+E,UAAWvH,KAAKmF,SAASnF,KAAKjC,MAAMyH,SACpC9C,QAAS1C,KAAK8E,cAAc,kE,GAzInBlC,aEDf4E,G,2LAIFzF,EAFqB/B,KAAKsC,MAAlBP,UAECD,O,iCAEAI,EAAMuF,GACf,OAAO,wBAAIjF,UAAU,WAAWjC,IAAK2B,EAAK3B,KAChC,yBAAKiC,UAAU,2BAA2BN,EAAKsD,SAE5CtD,EAAKkC,SAAU,kBAAC,EAAD,CAAMA,SAAUlC,EAAKkC,WAAY,M,+BAK7D,OAAGpE,KAAKsC,MAAM7D,UAAYuB,KAAKsC,MAAM7D,SAASsB,OAAS,EAC9C,4BAAMC,KAAKsC,MAAM7D,SAASiJ,IAAI1H,KAAK2H,aAChC,yBAAKpH,IAAI,a,GAjBFqC,cAoBRC,eACb,SAAC9E,GAIC,OAFAE,QAAQC,IAAI,qBAAsBH,GAE3B,CAAEU,SAAUV,EAAM6J,QAAQnJ,YALtBoE,CAOb2E,GCxBIK,E,kDACJ,aAAc,IAAD,8BACX,gBACKzB,OAAS,EAAKA,OAAOrB,KAAZ,gBAFH,E,mDAINpG,GACS,IRyBYwB,EQzBtBxB,KAEFoD,EADqB/B,KAAKsC,MAAlBP,WRwBgB5B,EQvBDxB,ERwBpB,SAACoD,GACNF,EAAIpB,OAAOoB,EAAIiG,SAAU3H,MQxBvBH,KAAK+H,iB,+BAIP,OACE,yBAAKvF,UAAU,OACb,yBAAKA,UAAU,cACb,kBAAC,IAAD,CAAMwF,GAAG,YACP,yBAAKhE,IAAKiE,IAAMzF,UAAU,WAAW0B,IAAI,WAG7C,kBAAC,EAAD,CAAQkC,OAASpG,KAAKoG,SACtB,kBAAC,EAAD,CAAUhC,SAAWpE,KAAKoE,gB,GArBfxB,aA2BJC,gBAAUgF,GClCJK,E,uKAEjB,OACE,+C,GAHgCtF,aCUvB,SAASuF,IACtB,OACE,kBAAC,IAAD,CAAU7I,MAAQA,GAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO8I,OAAK,EAACC,KAAK,KAAI,kBAAC,EAAD,OACtB,kBAAC,IAAD,KAAO,kBAAC,EAAD,UCbjBC,IAASC,OACP,kBAACJ,EAAD,MACAK,SAASC,eAAe,U,mBCP1BC,EAAOC,QAAU,IAA0B,2C","file":"static/js/main.c9e80692.chunk.js","sourcesContent":["import firebase from 'firebase';\r\nimport firebaseui from 'firebaseui';\r\nimport {USER, GROUP} from '../constants'\r\n\r\nexport default function getArticles(state, action){\r\n\r\n  console.log('dispatch getArticles', state, action.type);\r\n\r\n  if(action.type === USER){\r\n    let articles_of_mine = [];\r\n    let cUser = firebase.auth().currentUser;\r\n    state.articles.forEach((article) => {\r\n      if( article.user.uid && cUser && (article.user.uid ===  cUser.uid)){\r\n        articles_of_mine.push(article);\r\n      }\r\n    });\r\n    return Object.assign({}, state, { articles: articles_of_mine });\r\n  }\r\n  else if(action.type === GROUP){\r\n    //some code would be here\r\n    return Object.assign({},state,action);\r\n  }\r\n  return Object.assign({},state,action);\r\n}","export const USER = 'USER'\r\nexport const GROUP = 'GROUP'\r\nexport const ALL = 'ALL'\r\nexport const LOGIN ='LOGIN'","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport { syncHistoryWithStore, routerReducer } from 'react-router-redux'\r\n// 비동기 콜백을 redux에서 처리하는 middleware\r\nimport thunk from 'redux-thunk';\r\nimport * as articleReducers from '../reducers/Article'\r\n\r\n// reducer들을 조합해 줍니다. \r\n// 기본적으로 routerReducer는 router 에서 사용되는 상태들을 가지고 옵니다.\r\n// 우리가 관리할 reducer는 아래에 추가 됩니다\r\nconst reducer = combineReducers({\r\n  ...articleReducers,\r\n  routing: routerReducer\r\n})\r\n//DevTools의 Jsx\r\n//스토어를 만드는데,reducer 와 middleware를 변수로 받아서 처리합니다.\r\nexport const store = createStore(\r\n  reducer,\r\n  applyMiddleware(thunk)\r\n)\r\n//결국 store 객체를 browserHistory와 엮어서 만들어 줍니다.\r\n// export const history = syncHistoryWithStore(browserHistory, store)","import firebase from 'firebase';\r\nvar firebaseui = require('firebaseui');\r\n\r\nexport default class FirebaseDao {\r\n  constructor(config) {\r\n    if (firebase.apps && firebase.apps.length > 0){\r\n      this.firebaseApp = firebase.apps[0];\r\n    } else {\r\n      this.firebaseApp = firebase.initializeApp(config);\r\n    }\r\n  }\r\n  getFirebaseApp() {\r\n    return this.firebaseApp;\r\n  }\r\n\r\n  insert(postData){\r\n    return firebase.database().ref().child('posts').push(postData);\r\n  }\r\n  update(key,postData) {\r\n    const updates = {};\r\n    updates['/posts/' + key] = postData;\r\n    updates['/user-posts/genji/' + key] = postData;\r\n    return firebase.database().ref().update(updates);\r\n  }\r\n  remove(key) {\r\n    return new Promise(resolve => {\r\n      firebase.database().ref('/posts/').child(key).remove();\r\n      firebase.database().ref('/user-posts/genji/').child(key).remove();\r\n      resolve(key);\r\n    });\r\n  }\r\n  off(){\r\n    return firebase.database().ref().off();\r\n  }\r\n  newKey(){\r\n    return firebase.database().ref().child('posts').push().key;\r\n  }\r\n  /**\r\n  * Promise를 호출하게 되면 이벤트가 등록된 부분이 사라기제 된다.\r\n  */\r\n  list(pagesize, callback){\r\n    // return new Promise(resolve=>{\r\n      firebase.database().ref('posts')\r\n              .orderByKey().limitToLast(pagesize)\r\n              .on('value',(articles) => {\r\n                callback(articles);\r\n              })\r\n    // });\r\n  }\r\n  getArticle(key){\r\n    return new Promise(resolve => {\r\n      firebase.database().ref('/posts/'+key)\r\n              .on('value',(articles)=>{\r\n                resolve(articles);\r\n              })\r\n    });\r\n  }\r\n  getUI() {\r\n      return firebaseui.auth.AuthUI.getInstance() || new firebaseui.auth.AuthUI(firebase.auth());\r\n  }\r\n  \r\n  logout(){\r\n    return firebase.auth().signOut();\r\n  }\r\n}","const firebase_config = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DB_URL,\r\n  storageBucket: process.env.REACT_APP_STRG_BKT,\r\n  messagingSenderId: process.env.REACT_APP_MSG_SENDER_ID\r\n }\r\n export const embedlyKey = process.env.REACT_APP_EMBEDLY_KEY\r\n export default firebase_config;","import { USER, GROUP,ALL } from '../constants'\r\nimport firebase from 'firebase';\r\nimport firebaseui from 'firebaseui';\r\nimport FirebaseDao from '../FirebaseDao'\r\nimport config from '../config'\r\nconst dao = new FirebaseDao(config);\r\nexport function userArticles() {\r\n  return {\r\n    type: USER\r\n  }\r\n}\r\n/*\r\n* 여기부터\r\n*/\r\nexport function getArticles(articles) {\r\n  const items = [];\r\n  articles.forEach((article) => {\r\n    const item = article.val();\r\n    item['key'] = article.key;\r\n    items.push(item);\r\n  });\r\n  \r\n  console.log('action getArticles', items);\r\n\r\n  if (items && items.length > 0){\r\n    return {\r\n      type : ALL,\r\n      articles : items.reverse()\r\n    }\r\n  }\r\n}\r\n\r\nexport function loadArticles() {\r\n  \r\n  console.log('action loadArticles');\r\n  \r\n  return (dispatch) => {\r\n    dao.list(25, (articles) => dispatch(getArticles(articles)));\r\n  };\r\n}\r\nexport function updateArticle(postData){\r\n  return (dispatch) => {\r\n    dao.update(dao.newKey(), postData);\r\n  };\r\n}\r\nexport function groupArticles(articles) {\r\n  return {\r\n    type: GROUP,\r\n    articles: articles\r\n  }\r\n}","import firebase from 'firebase';\r\nimport React ,{Component} from 'react';\r\nimport './PopCard.css';\r\nimport { userArticles, loadArticles } from './actions/Article';\r\nimport {connect} from 'react-redux';\r\n\r\nclass PopCard extends Component{\r\n  logout(){\r\n    firebase.auth().signOut();\r\n  }\r\n  render(){\r\n    const { dispatch } = this.props;\r\n    if(this.props.isPop){\r\n      return(\r\n        <div className=\"card_pop\">\r\n          <div className=\"card_pop_arrow\"/>\r\n          <div>\r\n          <a href=\"#\" onClick={ ()=>dispatch(userArticles()) }>내 글만 보기</a>\r\n          </div>\r\n          <div>\r\n          <a href=\"#\" onClick={ ()=>dispatch(loadArticles()) }>전체 글 보기</a>\r\n          </div>\r\n          <div>\r\n            <a href=\"#\" onClick={ ()=>this.logout() }>로그아웃</a>\r\n          </div>\r\n        </div>);\r\n    }else{\r\n      return <div/>\r\n    }\r\n  }\r\n}\r\nexport default connect()(PopCard)","import React, { Component } from 'react';\r\nimport firebase from 'firebase';\r\nimport firebaseui from 'firebaseui';\r\nimport FirebaseDao from './FirebaseDao';\r\nimport config from './config';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Login extends Component {\r\n  constructor (props) {\r\n    super(props);\r\n    this.ui = (new FirebaseDao(config)).getUI();\r\n  }\r\n\r\n  componentDidMount() {\r\n    const uiConfig = {\r\n      'signInSuccessUrl': window.location.origin,\r\n      'signInOptions': [\r\n        firebase.auth.GoogleAuthProvider.PROVIDER_ID\r\n      ]\r\n    };\r\n\r\n    this.ui.start('#firebaseui-auth', uiConfig);\r\n  }\r\n  componentWillUnmount() {\r\n    this.ui.reset();\r\n  }\r\n  render() {\r\n    return (\r\n        <div id='firebaseui-auth'></div>\r\n    );\r\n  }\r\n};\r\n\r\n// function mapStateToProps(state, ownProps) {\r\n//   console.log(ownProps);\r\n\r\n//   return {\r\n//     id: ownProps.params.id,\r\n//     filter: ownProps.location.query.filter\r\n//   };\r\n// }\r\n\r\n// export default connect(mapStateToProps)(Login);\r\nexport default Login;","import React, { Component } from 'react';\r\nimport firebase from 'firebase';\r\nimport './Profile.css';\r\nimport PopCard from './PopCard';\r\nimport { Link } from 'react-router-dom';\r\nimport Login from './Login';\r\n\r\nclass Profile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state={\r\n      user: undefined,\r\n      isPop: false\r\n    }\r\n  }\r\n  componentWillMount() {\r\n    firebase.auth().onAuthStateChanged(user => {\r\n      console.log('user', user);\r\n      if (user) {\r\n        this.setState({ user: user });\r\n      } else {\r\n        this.setState({ user: undefined });\r\n      }\r\n    })\r\n  }\r\n  popProfile() {\r\n    this.setState({ isPop: !this.state.isPop })\r\n  }\r\n  \r\n  render() {\r\n    const user = this.state.user;\r\n    if (user) {\r\n      return (\r\n        <span>\r\n          <div className=\"profile_name\">\r\n            <a href=\"#\" onClick={ () => this.popProfile() }>{ user.displayName }</a>\r\n          </div>\r\n          \r\n          <div className=\"profile_img_wrap\">\r\n            <img src={ user.photoURL } alt=\"profiles\" className=\"profile_img\"/>\r\n          </div>\r\n          \r\n          <PopCard isPop={ this.state.isPop }/>\r\n        </span>\r\n      )\r\n    } else {\r\n      return (<div className=\"profile_name\"><Login /></div>)\r\n    }\r\n  }\r\n  \r\n}\r\nexport default Profile;","import React, { Component } from 'react'\r\nimport './Card.css'\r\n\r\nexport default class Card extends Component {\r\n  render() {\r\n    let cardInfo = this.props.cardInfo;\r\n    if (cardInfo) {\r\n      return (\r\n        <a className=\"card\" href={cardInfo.url} target=\"_blank\">\r\n          <div className=\"card_image\">\r\n            <img src={ cardInfo.links.thumbnail[0].href } alt={ cardInfo.meta.title } className=\"width100 card_img\" />\r\n          </div>\r\n          <div className=\"borderTop\">\r\n          <div className=\"card_text\">\r\n            <p className=\"card_title\">{ cardInfo.meta.title }</p>\r\n            <p className=\"card_desc\">{ cardInfo.meta.description }</p>\r\n            <p className=\"card_provider\">{ cardInfo.meta.site }</p>\r\n          </div>\r\n          </div>\r\n        </a>\r\n      )\r\n    }\r\n    else {\r\n      return null;\r\n    }\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport './Editor.css';\r\nimport firebase from 'firebase';\r\nimport Profile from './Profile';\r\nimport getEmbedly from './Embedly';\r\nimport Card from './Card';\r\n\r\nclass Editor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.onPaste = this.onPaste.bind(this);\r\n    this.editorChange = this.editorChange.bind(this);\r\n    this.getCard = this.getCard.bind(this);\r\n    this.hasValue = this.hasValue.bind(this);\r\n    this.detectURL = this.detectURL.bind(this);\r\n    this.getArticle = this.getArticle.bind(this);\r\n    this.getForcedState = this.getForcedState.bind(this);\r\n    this.state = {\r\n      embedlyUrl: undefined,\r\n      content: undefined\r\n    };\r\n  }\r\n  getForcedState(embedlyUrl, content) {\r\n    return new Promise(resolve => {\r\n      if (embedlyUrl) {\r\n        getEmbedly(embedlyUrl).then(response => {\r\n          let cardInfo = Object.assign({}, response.data);\r\n\r\n          resolve({\r\n            embedlyUrl,\r\n            content,\r\n            cardInfo\r\n          });\r\n        }).catch(e => {\r\n          resolve({\r\n            embedlyUrl: undefined,\r\n            content: undefined,\r\n            cardInfo: undefined\r\n          });\r\n        });\r\n      } \r\n      else {\r\n        resolve({\r\n          content: content\r\n        })\r\n      }\r\n    })\r\n  }\r\n  handleSubmit(event){\r\n    if (this.hasValue(this.state.content)) {\r\n      event.preventDefault();\r\n      this.props.submit(this.getArticle());\r\n      this.setState({\r\n        embedlyUrl : undefined,\r\n        content : undefined,\r\n        cardInfo : undefined\r\n      });\r\n    }\r\n\r\n  }\r\n  onPaste(event) {\r\n    const content = event.currentTarget.textContent;\r\n    event.clipboardData.items[0].getAsString(text => {\r\n      const checkText = this.detectURL(text);\r\n      if (checkText) {\r\n        this.getForcedState(checkText, content + text).then(obj => {\r\n          this.setState(obj)\r\n        })\r\n      }\r\n    })\r\n  }\r\n  editorChange(event) {\r\n    let checkText = this.detectURL(event.currentTarget.textContent);\r\n\r\n    if (!this.state.embedlyUrl && (event.keyCode === 32 \r\n      || event.keyCode === 13) && checkText) {\r\n        \r\n      this.getForcedState(checkText, event.currentTarget.textContent)\r\n        .then(obj => this.setState(obj))\r\n    } \r\n    // else {\r\n    //   this.getForcedState(undefined, event.currentTarget.textContent)\r\n    //     .then(obj => this.setState(obj))\r\n    // }\r\n  }\r\n  getArticle(){\r\n    const article = {};\r\n    const user = firebase.auth().currentUser;\r\n\r\n    // console.log('user', user);\r\n    article.user = {\r\n        email : user.email,\r\n        displayName : user.displayName,\r\n        uid : user.uid\r\n    };\r\n    article.content = this.state.content;\r\n    if (this.state.embedlyUrl) {\r\n      article.cardInfo = this.state.cardInfo;\r\n    }\r\n\r\n    return article;\r\n  }\r\n  detectURL(text) {\r\n    const urls = text.match(/(https?:\\/\\/[^\\s]+)/g) || text.match(/(www.[^\\s]+)/g);\r\n    if((urls !== null) && (urls.length > 0)) return urls[0];\r\n    else return undefined;\r\n  }\r\n  getCard(embedlyUrl){\r\n    if(embedlyUrl){\r\n      return(\r\n        <div>{embedlyUrl}</div>\r\n      );\r\n    }else{\r\n      return(<div/>);\r\n    }\r\n  }\r\n  hasValue(value) {\r\n    if((value && (typeof value) === \"string\"))\r\n      return (!value) ? false : (value.trim() === \"\" ? false : true)\r\n    else \r\n      return false;\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"wrapEditor\">\r\n        <div className=\"editor_header\">\r\n          <div className=\"today_title\">\r\n            무엇을 공유할까요?\r\n          </div>\r\n          <Profile/>\r\n        </div>\r\n        <div className=\"textEditor\">\r\n          <div className=\"innerEdit\"\r\n            contentEditable=\"true\"\r\n            placeholder=\"글쓰기...\"\r\n            onPaste={this.onPaste}\r\n            onKeyUp={this.editorChange}\r\n            dangerouslySetInnerHTML={{__html: this.state.content}}></div>\r\n            <Card cardInfo={this.state.cardInfo}/>\r\n        </div>\r\n        <div className=\"actionBar\">\r\n          <button className=\"upload\"\r\n            disabled={!this.hasValue(this.state.content)}\r\n            onClick={this.handleSubmit}><span>스탠드업!</span></button>\r\n        </div>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default Editor;","import request from 'axios';\r\nimport { embedlyKey } from './config';\r\n\r\nexport default function getEmbedly(url) {\r\n  return request.get('http://iframe.ly/api/iframely', {\r\n    params: {\r\n      url: url,\r\n      api_key: embedlyKey\r\n    }\r\n  })\r\n}","import React, { Component } from 'react';\r\nimport Card from './Card'\r\nimport './CardList.css'\r\nimport { connect } from 'react-redux'\r\nimport { loadArticles } from './actions/Article'\r\n\r\nclass CardList extends Component {\r\n  componentWillMount() {\r\n    const { dispatch } = this.props;\r\n    \r\n    dispatch(loadArticles());\r\n  }\r\n  createCard(item, index){\r\n    return(<li className=\"list_row\" key={item.key}>\r\n              <pre className=\"common_margin grey_text\">{item.content}</pre>\r\n              {\r\n                (item.cardInfo)?<Card cardInfo={item.cardInfo}/>:\"\"\r\n              }\r\n            </li>);\r\n  }\r\n  render() {\r\n    if(this.props.articles && this.props.articles.length > 0)\r\n      return <ul>{ this.props.articles.map(this.createCard) }</ul>;\r\n    else return <div key=\"015b\"/>\r\n  }\r\n}\r\nexport default connect(\r\n  (state)=>{\r\n    \r\n    console.log('CardList get state', state);\r\n\r\n    return { articles: state.default.articles };\r\n  }\r\n)(CardList);","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux'\nimport logo from './img/stand_up_logo.png';\nimport './Home.css';\nimport Editor from './Editor';\nimport CardList from './CardList'\nimport { updateArticle } from './actions/Article'\n\nclass Home extends Component {\n  constructor(){\n    super();\n    this.submit = this.submit.bind(this);\n  }\n  submit(article){\n    if (article) {\n      const { dispatch } = this.props;\n      dispatch(updateArticle(article));\n      this.forceUpdate();\n    }\n  }\n  render() {\n    return (    \n      <div className=\"App\">\n        <div className=\"App-header\">\n          <Link to=\"/standup\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          </Link>\n        </div>\n        <Editor submit={ this.submit }/>\n        <CardList cardInfo={ this.cardInfo } />\n      </div>\n    );\n  }\n}\n\nexport default connect()(Home);","import React, { Component } from 'react';\r\n\r\nexport default class NotFound extends Component {\r\n  render() {\r\n    return (\r\n      <div>Not Found!</div>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\nimport { store } from './store/global'\r\nimport Home from './Home';\r\nimport NotFound from './NotFound';\r\nimport Login from './Login';\r\n\r\nexport default function App() {\r\n  return (\r\n    <Provider store={ store }>\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\"><Home /></Route>\r\n          <Route><NotFound /></Route>\r\n        </Switch>\r\n      </Router>\r\n  </Provider>\r\n  );\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);","module.exports = __webpack_public_path__ + \"static/media/stand_up_logo.190ee485.png\";"],"sourceRoot":""}